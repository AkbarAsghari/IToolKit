<div class="top-row ps-3 navbar navbar-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="">IToolKit</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass">
    <BitSearchBox Placeholder="Search with Binded value" IsUnderlined="true" OnChange="onChange"></BitSearchBox>
    <BitNav Style="width: auto;
       height: auto;
       box-sizing: border-box;
       border: 1px solid #eee;
       overflow-y: auto;"
            Class="bit-nav-wrapped-link"
            SelectedKey="key6"
            AriaLabel="Nav example with wrapped link text"
            NavLinkItems="BasicNoToolTipNavLinks">
    </BitNav>
</div>

@code {

    private void onChange(string value)
    {
        BasicNoToolTipNavLinks = AllNavLinks.Where(x => x.Name.Contains(value)).ToList();
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private List<BitNavLinkItem> BasicNoToolTipNavLinks = new List<BitNavLinkItem>();

    private readonly List<BitNavLinkItem> AllNavLinks = new()
        {
            new BitNavLinkItem
            {
                Name = "Home",
                Url = "http://example.com",
                Title = "",
                CollapseAriaLabel = "Collapse Home section",
                ExpandAriaLabel = "Expand Home section",
                IconName = BitIconName.Home,
            },
            new BitNavLinkItem
            {
                Name = "Converters",
                IconName = BitIconName.ChangeEntitlements,
                Links = new List<BitNavLinkItem>
                {
                    new BitNavLinkItem { Name = "Timestamp", Url = "http://msn.com", IconName= BitIconName.Clock },
                }
            },
        };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            BasicNoToolTipNavLinks = AllNavLinks;
            await this.InvokeAsync(() => this.StateHasChanged());
        }
    }
}
