@inject IJSRuntime _jsRuntime

@if (_applicationUpdateNotificationShow)
{
    <MudAlert Severity="Severity.Info" ContentAlignment="HorizontalAlignment.Start" Dense ShowCloseIcon="true" CloseIconClicked="(() => _applicationUpdateNotificationShow = false)">iToolKit updated to new version</MudAlert>
}

@code {

    private bool _applicationUpdateNotificationShow = false;

    protected override async Task OnInitializedAsync()
    {
        await RegisterForUpdateAvailableNotification();
    }

    private async Task RegisterForUpdateAvailableNotification()
    {
        await _jsRuntime.InvokeAsync<object>(
            identifier: "registerForUpdateAvailableNotification",
            DotNetObjectReference.Create(this),
            nameof(OnUpdateAvailable));
    }

    [JSInvokable(nameof(OnUpdateAvailable))]
    public Task OnUpdateAvailable()
    {
        _applicationUpdateNotificationShow = true;

        StateHasChanged();

        return Task.CompletedTask;
    }

}