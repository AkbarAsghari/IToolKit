@using IToolKit.Client.API.Assembly
@using IToolKit.Client.API.Extensions
@using IToolKit.Client.API.Interfaces

@typeparam T where T : IToolProvider

<MudGrid Class="mt-5">
    <MudItem xs="12" md="3">
        <MudText Typo="Typo.h2">@GroupName</MudText>
    </MudItem>
    <MudItem xs="12" md="9">
        <MudGrid Spacing="1">
            @foreach (var tool in _Tools)
            {
                <MudItem xs="12" sm="6" md="4" lg="3">
                    <ToolProviderGridItem Link="@($"Tool/{GroupToolUrl}/{tool.Route}")" Title="@tool.MenuDisplayName" />
                </MudItem>
            }
        </MudGrid>
    </MudItem>
</MudGrid>


@code{
    [Parameter]
    public string GroupToolUrl { get; set; }

    [Parameter]
    public string GroupName { get; set; }

    IEnumerable<IToolProvider> _Tools;
    protected override void OnInitialized()
    {
        _Tools = AssemblyTools.GetGroupToolAndTools<T>().SortByOrderAttribute();
        StateHasChanged();
    }
}